<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>纸上得来终觉浅</title>
  <icon>https://www.gravatar.com/avatar/86275b7f9f315296cb15c17e578d182d</icon>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://dolphinfine.github.io/"/>
  <updated>2018-09-09T09:46:26.399Z</updated>
  <id>https://dolphinfine.github.io/</id>
  
  <author>
    <name>dolphinfine</name>
    <email>coolfzk@foxmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>iview在ie9及以上的兼容问题解决方案</title>
    <link href="https://dolphinfine.github.io/2018/09/09/iview%E5%9C%A8ie9%E5%8F%8A%E4%BB%A5%E4%B8%8A%E7%9A%84%E5%85%BC%E5%AE%B9%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>https://dolphinfine.github.io/2018/09/09/iview在ie9及以上的兼容问题解决方案/</id>
    <published>2018-09-09T03:01:33.000Z</published>
    <updated>2018-09-09T09:46:26.399Z</updated>
    
    <content type="html"><![CDATA[<p>是时候亮出这张图了：<br><img src="/2018/09/09/iview在ie9及以上的兼容问题解决方案/ie.png" alt=""></p><a id="more"></a><p>可是ie不是你不想兼容就不兼容啊。说多了都是泪。</p><p>使用iview已经有一年多的时间。总的来说，iview还是给我的工作带来了很大的方便。</p><p>主要的吐槽点就是文档写的不够清楚。</p><p>比如组件的按需引入，寥寥数语，看完按照文档引入了，结果控制台一直报错。</p><p><img src="/2018/09/09/iview在ie9及以上的兼容问题解决方案/按需引入.png" alt=""></p><p>然后到隔壁element一看，原来引入方式并不是只有一种，有的需要通过vue.prototype.xxx这种方式。</p><p>还有对于兼容性的描述，</p><p><img src="/2018/09/09/iview在ie9及以上的兼容问题解决方案/兼容.png" alt=""></p><p>你这么一说我还以为ie9直接引入polyfill就可以用了呢，谁知道根本不行。在github上提issue又说不支持低版本ie了。</p><p>根据我的经验，不需要很大改动，兼容性大概ie10+，这也是element官方文档上的兼容性。</p><p>不知道iview这么做是为了吸引更多人入坑还是怎么回事，毕竟大多数开发者开发的时候都是先看官方文档而不是先去github找issue。</p><p>吐槽归吐槽，iview总体上还是不错的。下面说一下我在使用iview的过程中所遇到的ie9+的兼容性问题及解决方案。</p><h2 id="安装babel-polyfill"><a href="#安装babel-polyfill" class="headerlink" title="安装babel-polyfill"></a>安装babel-polyfill</h2><p>IE浏览器没有内置Promise对象。不仅如此，几乎所有的ES6新增的方法在IE都不能用，此时你需要babel Polyfill</p><ol><li>首先</li><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install babel-polyfill --save</span><br></pre></td></tr></table></figure></li><li><p>修改webpack.base.conf.js</p><p> 修改前</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">entry: &#123;</span><br><span class="line">    main: &apos;./src/main&apos;,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p> 修改后</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">entry: &#123;</span><br><span class="line">    main: [&quot;babel-polyfill&quot;,&quot;./src/main&quot;],</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p> 看到网上有的教程安装完babel-polyfill又要安装es6-prommise，只能说一句：画蛇添足。</p></li></ol><h2 id="兼容dataset"><a href="#兼容dataset" class="headerlink" title="兼容dataset"></a>兼容dataset</h2><p><code>[Vue warn]: Error in directive transfer-dom inserted hook: &quot;TypeError: 无法获取未定义或 null 引用的属性“transfer”&quot;</code><br>这是ie10及以下不支持dataset导致的，而iview的transfer-dom.js使用了这个属性</p><p>解决办法：在main.js加入如下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">if (window.HTMLElement) &#123;</span><br><span class="line">    if (Object.getOwnPropertyNames(HTMLElement.prototype).indexOf(&apos;dataset&apos;) === -1) &#123;</span><br><span class="line">        Object.defineProperty(HTMLElement.prototype, &apos;dataset&apos;, &#123;</span><br><span class="line">            get: function () &#123;</span><br><span class="line">                var attributes = this.attributes; // 获取节点的所有属性</span><br><span class="line">                var name = [];</span><br><span class="line">                var value = []; // 定义两个数组保存属性名和属性值</span><br><span class="line">                var obj = &#123;&#125;; // 定义一个空对象</span><br><span class="line">                for (var i = 0; i &lt; attributes.length; i++) &#123; // 遍历节点的所有属性</span><br><span class="line">                    if (attributes[i].nodeName.slice(0, 5) === &apos;data-&apos;) &#123; // 如果属性名的前面5个字符符合&quot;data-&quot;</span><br><span class="line">                        // 取出属性名的&quot;data-&quot;的后面的字符串放入name数组中</span><br><span class="line">                        name.push(attributes[i].nodeName.slice(5));</span><br><span class="line">                        // 取出对应的属性值放入value数组中</span><br><span class="line">                        value.push(attributes[i].nodeValue);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                for (var j = 0; j &lt; name.length; j++) &#123; // 遍历name和value数组</span><br><span class="line">                    obj[name[j]] = value[j]; // 将属性名和属性值保存到obj中</span><br><span class="line">                &#125;</span><br><span class="line">                return obj; // 返回对象</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="降级依赖版本"><a href="#降级依赖版本" class="headerlink" title="降级依赖版本"></a>降级依赖版本</h2><p>如果遇到以下错误：</p><p><code>错误1：“webpackJsonp”未定义</code></p><p>解决方案：</p><p>更改webpack-dev-server版本为2.71或更低</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev webpack-dev-server@2.7.1</span><br></pre></td></tr></table></figure><h2 id="兼容requestAnimationFrame（ie9）"><a href="#兼容requestAnimationFrame（ie9）" class="headerlink" title="兼容requestAnimationFrame（ie9）"></a>兼容requestAnimationFrame（ie9）</h2><p>ie9是不支持requestAnimationFrame的，如果你使用了出现错误，那也没关系，往下看就行了。</p><p>解决方案：添加以下代码到main.js</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">// window.requestAnimationFrame多浏览器兼容问题补丁</span><br><span class="line">// http://paulirish.com/2011/requestanimationframe-for-smart-animating/</span><br><span class="line">// http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating</span><br><span class="line">// requestAnimationFrame polyfill by Erik Möller. fixes from Paul Irish and Tino Zijdel</span><br><span class="line">// MIT license</span><br><span class="line"></span><br><span class="line">(function () &#123;</span><br><span class="line">    var lastTime = 0;</span><br><span class="line">    var vendors = [&apos;ms&apos;, &apos;moz&apos;, &apos;webkit&apos;, &apos;o&apos;];</span><br><span class="line">    for (var x = 0; x &lt; vendors.length &amp;&amp; !window.requestAnimationFrame; ++x) &#123;</span><br><span class="line">        window.requestAnimationFrame = window[vendors[x] + &apos;RequestAnimationFrame&apos;];</span><br><span class="line">        window.cancelAnimationFrame = window[vendors[x] + &apos;CancelAnimationFrame&apos;] ||</span><br><span class="line">            window[vendors[x] + &apos;CancelRequestAnimationFrame&apos;];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (!window.requestAnimationFrame) &#123;</span><br><span class="line">        window.requestAnimationFrame = function (callback, element) &#123;</span><br><span class="line">            var currTime = new Date().getTime();</span><br><span class="line">            var timeToCall = Math.max(0, 16 - (currTime - lastTime));</span><br><span class="line">            var id = window.setTimeout(function () &#123; callback(currTime + timeToCall); &#125;,</span><br><span class="line">                timeToCall);</span><br><span class="line">            lastTime = currTime + timeToCall;</span><br><span class="line">            return id;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (!window.cancelAnimationFrame) &#123;</span><br><span class="line">        window.cancelAnimationFrame = function (id) &#123;</span><br><span class="line">            clearTimeout(id);</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;());</span><br></pre></td></tr></table></figure><h2 id="兼容classList（ie9）"><a href="#兼容classList（ie9）" class="headerlink" title="兼容classList（ie9）"></a>兼容classList（ie9）</h2><p>错误信息：<br><code>无法获取未定义或 null 引用的属性“add”</code></p><p><code>无法获取未定义或 null 引用的属性“remove”</code></p><p>如果你查看sourceMap发现了classList().add或classList.remove()等等，那肯定是classList的问题了。</p><p>解决方案：添加以下代码到main.js</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">if (!(&apos;classList&apos; in document.documentElement)) &#123;</span><br><span class="line">    Object.defineProperty(HTMLElement.prototype, &apos;classList&apos;, &#123;</span><br><span class="line">        get: function () &#123;</span><br><span class="line">            var self = this;</span><br><span class="line">            function update(fn) &#123;</span><br><span class="line">                return function (value) &#123;</span><br><span class="line">                    var classes = self.className.split(/\s+/g);</span><br><span class="line">                    var index = classes.indexOf(value);</span><br><span class="line"></span><br><span class="line">                    fn(classes, index, value);</span><br><span class="line">                    self.className = classes.join(&apos; &apos;);</span><br><span class="line">                &#125;;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            return &#123;</span><br><span class="line">                add: update(function (classes, index, value) &#123;</span><br><span class="line">                    if (!~index) classes.push(value);</span><br><span class="line">                &#125;),</span><br><span class="line"></span><br><span class="line">                remove: update(function (classes, index) &#123;</span><br><span class="line">                    if (~index) classes.splice(index, 1);</span><br><span class="line">                &#125;),</span><br><span class="line"></span><br><span class="line">                toggle: update(function (classes, index, value) &#123;</span><br><span class="line">                    if (~index) &#123; classes.splice(index, 1); &#125; else &#123; classes.push(value); &#125;</span><br><span class="line">                &#125;),</span><br><span class="line"></span><br><span class="line">                contains: function (value) &#123;</span><br><span class="line">                    return !!~self.className.split(/\s+/g).indexOf(value);</span><br><span class="line">                &#125;,</span><br><span class="line"></span><br><span class="line">                item: function (i) &#123;</span><br><span class="line">                    return self.className.split(/\s+/g)[i] || null;</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="项目内路由跳转避免使用location-href"><a href="#项目内路由跳转避免使用location-href" class="headerlink" title="项目内路由跳转避免使用location.href"></a>项目内路由跳转避免使用location.href</h2><p>为了更好的性能，我们通常会采用路由懒加载。在单页面应用中，每打开一个页面基本上都只加载对应的资源文件。</p><p>如果跳转到之前的页面，通常页面会采用缓存的资源文件，不会再次加载，这样有效提高了页面加载效率。</p><p>而如果采用location.href这种方式，页面会全部刷新，重新下载所有页面资源，不能很好的利用缓存。</p><p>这些可以从chrome控制台的network去查看。</p><p>更重要的是，如果直接采用location.href，ie浏览器可能会出现url变化页面不刷新的情况！</p><p>比如路由如下：<br>127.0.0.1：8080/#/home<br>127.0.0.1：8080/#/about</p><p>当前页面是127.0.0.1：8080/#/home，<br>点击按钮跳转<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">jump()&#123;</span><br><span class="line">    location.href = &apos;/#/about&apos;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>你会发现，浏览器地址栏url变了，然后页面还是home页面！<br>所以你应该这样用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">jump()&#123;</span><br><span class="line">    let url = &apos;/#/about&apos;;</span><br><span class="line">    let path = url.split(&apos;#&apos;)[1];</span><br><span class="line">    this.$router.push(path);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这下跳转就没问题了。</p><p>当然，如果你有一些地方必须要使用location.href,比如你接入了第三方的一些服务，你无法控制，也有解决方法：在vue根实例的created或者mounted生命周期添加如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">window.addEventListener(&apos;hashchange&apos;, () =&gt; &#123;</span><br><span class="line">    let currentPath = window.location.hash.slice(1);</span><br><span class="line">    if (this.$route.fullPath !== currentPath) &#123;</span><br><span class="line">        this.$router.push(currentPath);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;, false);</span><br></pre></td></tr></table></figure><p>通过监听hashchange，一旦发现当前页面url与浏览器地址栏url不同，就调用vue的路由方法跳转到地址栏url去。</p><p>如果目的页面被keep-alive也会触发这个方法，但是没有影响。</p><h2 id="使用scrollTop"><a href="#使用scrollTop" class="headerlink" title="使用scrollTop"></a>使用scrollTop</h2><p>如果页面太长，我们会加个滚动到顶部的按钮</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">toTop(el)&#123;</span><br><span class="line">    el.scrollTo(0, 0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>谁知道ie下竟然无动于衷！尝试了一番，才发现是ie浏览器不支持scrollTo所致。</p><p>改成这样：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">toTop(el)&#123;</span><br><span class="line">    if (el &amp;&amp; el.scrollTo) &#123;</span><br><span class="line">        el.scrollTo(0, 0);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        el.scrollTop = 0;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ie也可以滚动到顶部了。</p><h2 id="ie9不支持cors跨域"><a href="#ie9不支持cors跨域" class="headerlink" title="ie9不支持cors跨域"></a>ie9不支持cors跨域</h2><p>这点是最坑的，页面在ie10+打开虽然有些地方也会报错，但是ie9完全不会展示页面，也就是说一个页面都展示不出来！</p><p>控制台报错：访问拒绝！</p><p>除此之外再无其他信息。</p><p>反复查看axios和vue的文档，都说支持ie9.</p><p>这问题折磨了我好久，没有具体错误信息，根本无从下手。</p><p>一个一个排查，不会是axios的问题吧。</p><p>一查发现果然是：ie8/9不支持cors跨域方案，取而代之的是ie的XDomainRequest方法</p><p>不想再去研究XDomainRequest方法了。直接用webpack-dev-server提供的服务器代理方法（前提是后台已经配置好跨域）,大概这样：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">devServer: &#123;</span><br><span class="line">    port: 8080,</span><br><span class="line">    proxy: &#123;</span><br><span class="line">        &apos;/api&apos;: &#123;</span><br><span class="line">        target: &apos;http://xx.xx.cn/&apos;,</span><br><span class="line">        pathRewrite: &#123;&apos;^/api&apos; : &apos;&apos;&#125;,</span><br><span class="line">        changeOrigin: true</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>想要了解更多的可以看看这个<a href="https://www.jianshu.com/p/4f04013b8b91" target="_blank" rel="noopener">IE8、9 下的资源跨域请求</a></p><h2 id="一些新特性不要用"><a href="#一些新特性不要用" class="headerlink" title="一些新特性不要用"></a>一些新特性不要用</h2><p>用了translateX()发现ie9无动于衷，还是乖乖用相对定位吧;</p><p>线性渐变linear-gradient()可以用，但是ie不会识别的，所以先设置一个纯色背景或图片背景再设置线性渐变吧，不然ie背景设置不上。</p><p>flex布局是挺爽，但是别用。想要同样的效果，table布局也不错。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;是时候亮出这张图了：&lt;br&gt;&lt;img src=&quot;/2018/09/09/iview在ie9及以上的兼容问题解决方案/ie.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="vue" scheme="https://dolphinfine.github.io/categories/vue/"/>
    
    
      <category term="ie" scheme="https://dolphinfine.github.io/tags/ie/"/>
    
      <category term="axios" scheme="https://dolphinfine.github.io/tags/axios/"/>
    
      <category term="iview" scheme="https://dolphinfine.github.io/tags/iview/"/>
    
      <category term="vue" scheme="https://dolphinfine.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>逝者如斯夫，不舍昼夜</title>
    <link href="https://dolphinfine.github.io/2018/09/08/%E9%80%9D%E8%80%85%E5%A6%82%E6%96%AF%E5%A4%AB%EF%BC%8C%E4%B8%8D%E8%88%8D%E6%98%BC%E5%A4%9C/"/>
    <id>https://dolphinfine.github.io/2018/09/08/逝者如斯夫，不舍昼夜/</id>
    <published>2018-09-08T14:39:23.000Z</published>
    <updated>2018-09-09T09:20:38.762Z</updated>
    
    <content type="html"><![CDATA[<p>毕业后踏入社会，时间好像一下子加快了。</p><p>焦虑与日俱增。</p><p>幸福与快乐都是支离破碎的，来不及抓住，下一秒惶恐就袭上心头。</p><p>该怎么办呢？</p><a id="more"></a><p>这世界每天都在变。</p><p>日子如履薄冰，可还是要过下去。</p><p>咬牙坚持。</p><p>回头看过去似乎也没那么难。</p><p>生活是过不完的坎。</p><p>不想被打败，那就勇敢面对。</p><p>总有一天，你会无所畏惧。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;毕业后踏入社会，时间好像一下子加快了。&lt;/p&gt;
&lt;p&gt;焦虑与日俱增。&lt;/p&gt;
&lt;p&gt;幸福与快乐都是支离破碎的，来不及抓住，下一秒惶恐就袭上心头。&lt;/p&gt;
&lt;p&gt;该怎么办呢？&lt;/p&gt;
    
    </summary>
    
      <category term="感悟" scheme="https://dolphinfine.github.io/categories/%E6%84%9F%E6%82%9F/"/>
    
    
      <category term="感悟" scheme="https://dolphinfine.github.io/tags/%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://dolphinfine.github.io/2018/09/08/hello-world/"/>
    <id>https://dolphinfine.github.io/2018/09/08/hello-world/</id>
    <published>2018-09-08T01:51:09.637Z</published>
    <updated>2018-09-08T14:46:35.242Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><a id="more"></a><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
